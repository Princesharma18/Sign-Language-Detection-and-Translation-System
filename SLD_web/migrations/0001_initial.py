# Generated by Django 5.1.3 on 2025-07-12 15:36

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_predictions', models.IntegerField(default=0)),
                ('successful_predictions', models.IntegerField(default=0)),
                ('failed_predictions', models.IntegerField(default=0)),
                ('average_processing_time', models.FloatField(default=0.0)),
                ('average_confidence', models.FloatField(default=0.0)),
                ('new_users', models.IntegerField(default=0)),
                ('active_users', models.IntegerField(default=0)),
                ('positive_feedback', models.IntegerField(default=0)),
                ('negative_feedback', models.IntegerField(default=0)),
                ('feedback_rate', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('is_auth', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_super_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='customuser_set', related_query_name='customuser', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_set', related_query_name='customuser', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('prediction_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('prediction', models.TextField(blank=True)),
                ('raw_output', models.TextField(blank=True, help_text='Raw ML model output')),
                ('confidence_score', models.FloatField(blank=True, help_text='Prediction confidence (0-1)', null=True)),
                ('processing_time', models.FloatField(blank=True, help_text='Processing time in seconds', null=True)),
                ('user_feedback', models.CharField(blank=True, choices=[('like', 'Like'), ('dislike', 'Dislike')], max_length=10, null=True)),
                ('feedback_timestamp', models.DateTimeField(blank=True, null=True)),
                ('feedback_comment', models.TextField(blank=True, help_text='Optional user comment about the prediction')),
                ('feedback_required', models.BooleanField(default=True, help_text='Feedback is mandatory for this prediction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SLD_web.customuser')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PredictionFeedback',
            fields=[
                ('feedback_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_correct', models.BooleanField(help_text='Was the prediction correct?')),
                ('comment', models.TextField(blank=True, help_text='User suggestions for improvement')),
                ('prediction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='detailed_feedback', to='SLD_web.prediction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SLD_web.customuser')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('prediction', 'Prediction'), ('feedback', 'Feedback'), ('upload', 'Upload')], max_length=50)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('details', models.JSONField(blank=True, default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SLD_web.customuser')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserImageModel',
            fields=[
                ('location', models.CharField(blank=True, max_length=255)),
                ('input_type', models.CharField(choices=[('upload', 'Upload'), ('camera', 'Camera'), ('url', 'URL')], default='upload', max_length=20)),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('image_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='images/')),
                ('file_size', models.PositiveIntegerField(blank=True, help_text='File size in bytes', null=True)),
                ('width', models.PositiveIntegerField(blank=True, null=True)),
                ('height', models.PositiveIntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SLD_web.customuser')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='prediction',
            name='image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='SLD_web.userimagemodel'),
        ),
        migrations.CreateModel(
            name='UserVideoModel',
            fields=[
                ('location', models.CharField(blank=True, max_length=255)),
                ('input_type', models.CharField(choices=[('upload', 'Upload'), ('camera', 'Camera'), ('url', 'URL')], default='upload', max_length=20)),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('video_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('video', models.FileField(upload_to='videos/')),
                ('file_size', models.PositiveIntegerField(blank=True, help_text='File size in bytes', null=True)),
                ('duration', models.DurationField(blank=True, help_text='Video duration', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SLD_web.customuser')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='prediction',
            name='video',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='SLD_web.uservideomodel'),
        ),
    ]
